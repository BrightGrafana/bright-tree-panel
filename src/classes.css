:root {
    --value-color: #cc00ff;
}

.treeView {
    overflow: auto;
    width: 100%;
    height: 100%;
    white-space: nowrap;
    padding: 4px;
}

.treeView .content {
    padding-top: 0;
    padding-bottom: 0;
}

.bright-tree-panel-table {
    width: calc(100vw - (100vw - 100%));
}

.bright-tree-panel-table.grid-lines {
    border-collapse: collapse;
}

.bright-tree-panel-table.grid-lines th,
.bright-tree-panel-table.grid-lines td {
    border: 1px solid #ddd;
    padding: 4px;
}

.bright-tree-panel-table.no-grid-lines th,
.bright-tree-panel-table.no-grid-lines td {
    border-color: transparent !important;
}

.bright-tree-panel-table.compact-mode th,
.bright-tree-panel-table.compact-mode td {
    padding: 1px;
}

.bright-tree-panel-table a {
    color: rgb(110, 159, 255);
}

.bright-tree-panel-table a:hover {
    text-decoration: underline;
    color: rgb(110, 159, 255);
}

.bright-tree-panel-table th {
    font-weight: bold;
}

.disabled-node {
    opacity: 0.5;
    pointer-events: none;
}

.bright-tree-panel-table tr {
    cursor: pointer;
}

.bright-tree-panel-table:not(:has(.parentIconContent)) .parentIconSlot {
    display: none;
}

.bright-tree-panel-table:not(:has(.iconContent)) .iconSlot {
    display: none;
}

.bright-tree-panel-table tr:hover {
    background-color: rgba(25, 118, 210, 0.08);
}

.bright-tree-panel-table tr.selected-node {
    background-color: rgba(25, 118, 210, 0.08);
    font-weight: 800;
}

.bright-tree-panel-table tr.active-node {
    background-color: rgba(25, 118, 210, 0.3);
}

.bright-tree-panel-table tr:focus, .bright-tree-panel-table tr:focus-visible {
    outline: none;
}

.bright-tree-panel-table .mapped-value {
    display: inline-block !important;
}

.bright-tree-panel-table .mapped-value span {
    display: inline-block !important;
    color: inherit !important;
}

.bright-tree-panel-table .mapped-value-inner {
    display: inline-block !important;
    color: inherit;
}

/* higher specificity selector to override Grafana defaults */
.bright-tree-panel-table td .mapped-value .mapped-value-inner {
    display: inline-block !important;
}

/* ensure no other styles override our color */
.bright-tree-panel-table td .mapped-value .mapped-value-inner[style*="color"] {
    color: var(--value-color) !important;
}

/* add !important to color to ensure it takes precedence */
.bright-tree-panel-table td .mapped-value .mapped-value-inner[data-has-color="true"] {
    color: var(--value-color) !important;
}

/* remove nested selectors that might be causing specificity issues */
.mapped-value-inner[data-has-color="true"] {
    color: var(--value-color) !important;
}

/* add direct color support for testing environments that might not support CSS variables */
.mapped-value-inner[style*="--value-color"] {
    color: var(--value-color) !important;
}
